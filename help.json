{
    "testwebsite" : "Enter a URL to an internet web site.  This is the site that Portal Auth will attempt to reach to determine if a captive portal is blocking your connection.",
	"expecteddata" : "This is the data you expect Portal Auth to receive when accessing Test Website.  It is recommended that you leave these settings at their default as they have been tested.  If you change them make sure you know exactly what data is coming from the Test Website otherwise you will receive a false positive.",
	"tags" : "These are HTML tags that you want Portal Auth to search for when attempting to authenticate with an AP.  In a web page these tags typically hold data that the portal is looking for and are referenced by name when creating the $_POST request that gets sent to the authorization target.  Enter a list of elements delimited by a semicolon.  Please enter only tag names and not what the element would actually look like in HTML.",
	"injectjs" : "This is the JavaScript code that will be injected into the cloned portal.",
	"injecthtml" : "This is the HTML form code that will be injected into the cloned portal.  Do not include form tags in this code as it will be injected into an already existing form on the cloned page.",
	"injectcss" : "This is the style code that will be applied to the HTML elements.  It is important to have a nice looking login form otherwise the victim may get suspicious.",
	"auth.php" : "This is the script that logs the credentials of a victim.  It is located at /www/nodogsplash/",
	"p_archive" : "This is the location where you store your portals.  If you want to be able to see your portal in Evil Portal II then you must use either /sd/portals/ or /root/portals/<br /><br />*ALWAYS* end this directory with a forward slash (/). If you don't, the cloner will not be able to find the archive.",
	"portalname" : "This is the name you want for the cloned portal.  It is recommended that you keep this all one word since it will be the name of a directory.  If you must make it multiple words please use an underscore (_) between words instead of spaces.",
	"activateportal" : "This will place the cloned portal in /etc/nodogsplash/htdocs.  Keep in mind that when you do this it will overwrite the current active portal.",
	"striplinks" : "Select this if you want to strip all links from &lt;a&gt; tags from the cloned portal.",
	"stripjs" : "Select this if you want to strip all inline JavaScript from the cloned portal.",
	"stripcss" : "Select this if you want to strip all inline CSS from the cloned portal.",
	"stripforms" : "Select this if you want to strip all form data from the cloned portal.",
	"mac_collection" : "If the auto authentication request fails, and this option is checked, Portal Auth will gather all of the MAC addresses of the clients on the network so you can impersonate one of them.<br /><br />The reason this can't be done automatically is because the client interface must be brought down in order to change the MAC address.",
	"pa_pass" : "This python script is used to listen for connections from the Network Client payload.  When a connection is initiated the IP address, port, hostname, and OS type of the compromised system are logged in the file associated with the targetlog variable.  The activitylog variable holds the file location where various messages are stored about the server's activity.<br /><br />The lhost and lport variables hold the IP address and port number on which the server will listen.  lhost should always be the Pineapple's address while lport can be any available port on the system.  If the lport changes on the server make sure you change the rport variable in the Network Client as well.  After modifying the script, simply click save and the server will be ready to start.<br /><br /><div style='color: yellow'>[!] *** For any port you choose as the listener you will need to update the nodogsplash configuration in Evil Portal II.  The following rule must be added under 'FirewallRuleSet users-to-router' in order to get connections back from your payloads:<br /><br /><div style='color:red'>FirewallRule allow tcp port 4443</div><br />Replace 4443 with the port that PASS is listening on otherwise you will not receive connections while nodogsplash is running. *** [!]</div>",
	"pa_NetworkClient_Windows" : "The Network Client script is a basic Windows payload that opens a shell on the victim's system and creates a firewall rule in Windows Firewall to allow connections on the open port.  The rhost and rport variables refer to the socket on which the Portal Auth Shell Server (PASS) is listening on the Pineapple.  This payload will choose a random port number on which to begin listening and will send that information back to PASS.  You can freeze this script with cx_freeze, or any other python bundler, then upload the binary to its respective OS section.  There is no need to re-clone a portal after recompiling the script and uploading the binary as long as the name of the payload remains the same.",
	"pa_NetworkClient_OSX" : "This version of the Network Client script is a basic OS X payload that functions in the exact same way as the Windows payload.  The only difference between the two is how the GUI is implemented.  This version uses Tkinter to display a single window with a message and the user's access key.",
	"pa_payloadhelp" : "This is where you will upload your payload files.  They should be uploaded to their respective sections and named accordingly:<br /><br />Windows: NetCli.exe<br />OS X: NetCli.app.zip<br />Android: NetCli.apk<br />iOS: NetCli.ipa<br /><br />If you change the file names you must ensure you change them in the Payloader InjectJS file and re-clone the captive portal otherwise you will have dead links in your portal.<br /><br />All payloads are stored in the /www/download/ directory in their respective platform directories.",
	"pa_cfgUploadLimit" : "Clicking this link will configure the max upload limit on the Pineapple to be greater than the default of 2MB.  To be more specific it will configure the following:<br /><br /><span style='color: #00FF00'>/etc/php.ini</span><br />&nbsp;&nbsp;&nbsp;upload_max_filesize = 20M<br />&nbsp;&nbsp;&nbsp;post_max_size = 26M<br /><br /><span style='color: #00FF00'>/etc/nginx/nginx.conf</span><br />&nbsp;&nbsp;&nbsp;client_max_body_size 20M;<br /><br />This allows you to upload payloads greater than 2MB from this tab."
}